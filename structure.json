{
    "title": "Kubernetes Goat - Hands On",
    "description": "This course is meant to walk you through the kubernetes goat repository. Dig deeper here: https://madhuakula.com/kubernetes-goat/",
    "items": [
      { "path": "scenario01",
      "title": "Scenario 01 - ⎈ Sensitive keys in codebases",
      "description": "This scenario focuses on common mistakes developers and DevOps teams make when packaging artefacts and application code. It demos real-world impact, similar to a compromised organization and their infrastructure."},
      { "path": "scenario02" , 
      "title": "Scenario 02 - ⎈ DIND (docker-in-docker) exploitation",
      "description": "In this scenario, we will be focusing on the common and standard ways how to build systems and pipelines that leverage container sockets to create, build and run containers from the underlying container runtime. This has been exploited since the early days of the container ecosystem and even today we see these misconfigurations/use cases in the real world."},
      { "path": "scenario03" , 
      "title": "Scenario 03 - ⎈ SSRF in the Kubernetes (K8S) world",
      "description": "SSRF vulnerabilities in applications in cloud environments"},
      { "path": "scenario04" , 
      "title": "Scenario 04 - ⎈ Container escape to the host system",
      "description": "This scenario showcases the common misconfigurations and one of the error-prone security issues in Kubernetes, container environments, and the general security world. In this scenario you will see a privileged container escape to gain access to the host system."},
      { "path": "scenario05" , 
      "title": "Scenario 05 - ⎈ Docker CIS benchmarks analysis",
      "description": "This scenario is very useful in performing container security audits and assessments. Here we will learn to run the popular CIS benchmark audit for the docker containers and use the results for the further exploitation or fixing of the misconfigurations and vulnerabilities. This is very important if you are coming from an audit and compliance background in the modern world of containers and cloud native ecosystems."},
      { "path": "scenario06" , 
      "title": "Scenario 06 - ⎈ Kubernetes CIS benchmarks analysis",
      "description": "This scenario is very useful in performing Kubernetes security audits and assessments."},
      { "path": "scenario10" , 
      "title": "Scenario 10 - ⎈ Analysing crypto miner container",
      "description": "It's commonly seen that most of the container users download the images from the public container registries like Docker Hub and others. We have seen a ton of hacks and compromises of these and also attackers abusing these by uploading the container images which has crypto miners to use the cluster resources. In this scenario, we see one simple and very common way of exploiting these vulnerabilities in the public container images."},
      { "path": "scenario12" , 
      "title": "Scenario 12 - ⎈ Gaining environment info",
      "description": "This is no different from the traditional workloads. Most of the compute instances while running the applications store sensitive information like secrets, api_keys, etc. in the environment variables. Similarly, in Kubernetes, most of the people store sensitive information like Kubernetes Secrets and the Config values in the environment variables and if an attacker can find application vulnerabilities like RCE(remote code execution) or command injection then it's game over for that secret."},
      { "path": "scenario13" ,
      "title": "Scenario 13 - ⎈ DoS the Memory/CPU resources",
      "description": "Availability is one of the triads in CIA. One of the core problems solved by Kubernetes is the management of the resources like autoscaling, rollouts, etc. In this scenario, we will see how attackers can leverage and gain access to more resources or cause an impact on the availability of the resources by performing the DoS (Denial of Service) if there were no resource management configurations implemented on the cluster resources like memory and CPU requests and limits."},
      { "path": "scenario15",
      "title": "Scenario 15 - ⎈ Hidden in layers",
      "description": "Most of the container images download and used on the internet are created by someone else. If we don't know how they get created (which means if we don't have Dockerfile) then I think we might be in trouble sometimes. In this scenario, we can see how to analyze the docker container image layers by using the built-in utilities and also some popular open-source utilities like dive to understand the container image layers."},
      { "path": "scenario16",
      "title": "Scenario 16 - ⎈ RBAC Least privilege",
      "description": "In the early days of Kubernetes, there is no such concept as RBAC (role-based access control) and mostly it uses ABAC (attribute-based access control). Now it has superpowers like RBAC to implement the security principle of least privilege. Still, most of the real-world workloads and resources end up having wider privileges than it is intended to have. In this scenario, we will see how simple misconfiguration like this can gain access to secrets, more resources, and information."}
    ]
  }